（1）给你开始时间，结束时间，duration，一个数组存着所有已经被book的区间，让你返回开始时间到结束时间内所有还没被book的区间。题目只有文字描述，自己定义input和output。写好后跑test case。看其他帖子里有要求自己写test case的。我的面试官比较好，不用我自己写test case，她都已经写好了，就看她在那边自己跑不同的test case。发现有个edge case没处理，我改了下代码。通过后问了下时间空间复杂度。

    followup 1：如果给你n个人已经被book的区间，怎么做

    follow‍‍‍‍‍‍‍‍‌‍‌‌‍‌‌‌‌‌up 2：给你一个数组存着所有已经被book的区间，现在要book另一个meeting，问能够成功。假设input已经排好序，是否有更快的方法？

    把刷题网有关区间那几题搞懂就可以了，重点关注漆芜灸，妖唲迩玖

（2）
    一个矩阵里最大的相同元素的面积比较简单的dfs就能搞定。查边界条件的时候忘记包括0了导致第一次跑test case有几个没过
    发现后及时改正就过了


    拓展1: 同时返回元素。 比较长度的时候多一个变量记下元素就行
    拓展2: 大矩阵无法全部放进内存。大概说了下想法，分治，在矩阵间和矩阵内做两层dfs，在相邻边界的元素上同时存上迄今为止这个元素最大的联通面积并传到下个矩阵遍历作为输入
  
（3）
    ··2. 算法问题：给了一个List的calendar bookings， 要求返回所有在区间a 到 b内，大于duration的空闲时间段。

      给一个二位int矩阵，数岛屿的个数，里面有各种不同的value。

      我用DFS写的，有点小bug出了stack overflow，自己改过来了。

      Follow-up是问如果矩阵很大没法存到memory怎么办，可以存硬盘上然后maintain一个list of inputStream，
      每个row从硬盘里读。接着问DFS还能不能行？答说不得行因为会有Stack Overflow，应该用BFS，如果queue很大也可‍‍‍‍‍‍‍‍‌‍‌‌‍‌‌‌‌‌以overflow到硬盘上。上周四面的，这周三通知pass。
  
 （4）

      最近看帖子，花了太多大米，发面经攒人品，求大米。给我家大米你不会扣大米的！

      门冲中国人很多，但是我运气不好，碰到一个刚入职不到一年的印度人店面。他比较啰嗦，他的自我介绍，他讲了10分钟。然后我自我介绍，我尽量快一点，因为做题重要。然后出了一道题，如下。

      1 1 1 2 3
      2 1 2 1 1
      1 1 3 3 3

      找出最大的一个连续的相同数字的空间。上面就是返回6，只能横竖相连，不能对角线。就是‘1’。
      非常快啊，我BFS秒掉了。他让run一下，我run了，有一点点小typo什么的，快速解决，run过了他给的4个case。

      然后follow up。
      如果可以对角线怎么办？
      很快啊，我就加了对角线的4个搜索条件。

      然后问，BFS和DFS‍‍‍‍‍‍‍‍‌‍‌‌‍‌‌‌‌‌的区别什么的。
      上午面试，当天下午收到HR的邮件，说过了，让onsite。
  
  （5）

      先发泄一下我的怒火，简直是挂的莫名其妙。十分怀疑我是不是给烙印面试官黑了。
      一开始就是简单介绍一下自己，然后开始写题。
      题目是地里之前的新题，就是假设有两个menu, 它们是以树结构表示的，让你判断这两颗树是否相同。
      Node(key, val, List<Node>children).  如果val变了，或者children 变了，都算变。 children 的顺序没有关系。

      我直接开始说思路，就是同时遍历两颗树， 改动的情况，分三种， deleted branch， added new branch， update node value。 说完，我和面试官确认思路，他有没有听懂，有没有问题。他说挺好的，然后我就是开始写了。
      写代码秒了，这个时候大概整个面试过去30分钟多一点。然后他提供了一个test case，他没有和我明说这个test case 的output应该是啥。我run 完我的代码，我以为他给的tree 是两个不同的tree，我的代码的method signature 是 isModfied(), 返回false，我就回头开始debug， 先把input 画出来，发现其实是两个一样的树，然后我再和他确认。他才告诉我说， 他以为signature 是 isIdentical(). 然后我再修改了两个例子，去cover 另外两种情况， deleted 和 added, 都没有问题。 所以算是bug free 吧。然后又问了问我corner case 的情况，我就说可以考虑万一两个点是null,或者其中一个点是null 的情况。然后再稍微改了改代码。


      followup 是问想要知道有多少点被改动了，我和他确认了一些情况，然后开始说思路，这个时候 45 分钟多了。思路就很简单， deleted 的branch 就去old tree 中数所有的节点。 added 的branch 就去new tree 中数所有的节点。 updated 就是 加自己。 他表示认可，这次由于时间不够，所以我是一边说一边开始写码的。写完大概 50 分钟的样子，改一改test case测试，有一点小问题。 他就说”时间不够了，我知道给你再多5分钟肯定能够解决的。“


      他这么说，那我就没说啥。然后他就先把code session 关了。 我开‍‍‍‍‍‍‍‍‌‍‌‌‍‌‌‌‌‌始问问题，大概聊了 10分钟的样子。期间氛围还算是挺融洽的。

      面完，我觉得稳了。

      recruiter 今天和我说挂了。原因是面试，didn't go as well as we had hoped.  
      吐槽一下这个recruiter， 之前给我安排面试，还安排了错误的track。
      我是真不知道哪里出问题了，是被黑了，还是哪里还不够好，还是position 被填了，recruiter 就是敷衍的回复一下。
